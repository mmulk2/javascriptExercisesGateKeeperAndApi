"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _getPropertyName2=_interopRequireDefault(require("./get-property-name.js")),_isotropicNaturalSort=_interopRequireDefault(require("isotropic-natural-sort"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var _default={create:a=>{const[{caseSensitive:b=!1,direction:c="asc",ignoreSpecialCharacters:d=!0,prefixPositions:e={_:"last"}}={}]=a.options,f=(0,_isotropicNaturalSort.default)({caseSensitive:b,direction:c,ignoreSpecialCharacters:d,prefixPositions:e});return{ObjectExpression(b){b.properties.reduce((b,c)=>{const d=(0,_getPropertyName2.default)(c);return d?(b&&0<f(b,d)&&a.report({data:{previousPropertyName:b,propertyName:d},message:"Expected object keys to be in order. '{{propertyName}}' should be before '{{previousPropertyName}}'.",node:c.key}),d):b},null)}}},meta:{docs:{category:"Stylistic Issues",description:"require object keys to be sorted",recommended:!0},fixable:null,schema:[{additionalProperties:!1,properties:{caseSensitive:{type:"boolean"},direction:{enum:["asc","desc"],type:"string"},ignoreSpecialCharacters:{type:"boolean"},prefixPositions:{type:"object"}},type:"object"}]}};exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2pzL3NvcnQta2V5cy5qcyJdLCJuYW1lcyI6WyJjcmVhdGUiLCJjb250ZXh0IiwiY2FzZVNlbnNpdGl2ZSIsImRpcmVjdGlvbiIsImlnbm9yZVNwZWNpYWxDaGFyYWN0ZXJzIiwicHJlZml4UG9zaXRpb25zIiwiXyIsIm9wdGlvbnMiLCJuYXR1cmFsU29ydCIsIk9iamVjdEV4cHJlc3Npb24iLCJub2RlIiwicHJvcGVydGllcyIsInJlZHVjZSIsInByZXZpb3VzUHJvcGVydHlOYW1lIiwicHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJyZXBvcnQiLCJkYXRhIiwibWVzc2FnZSIsImtleSIsIm1ldGEiLCJkb2NzIiwiY2F0ZWdvcnkiLCJkZXNjcmlwdGlvbiIsInJlY29tbWVuZGVkIiwiZml4YWJsZSIsInNjaGVtYSIsImFkZGl0aW9uYWxQcm9wZXJ0aWVzIiwidHlwZSIsImVudW0iXSwibWFwcGluZ3MiOiJnVkFHZSxDQUNYQSxNQUFNLENBQUVDLENBQU8sRUFBSSxDQUNmLEtBQU0sQ0FBQyxDQUNDQyxhQUFhLENBQWJBLENBQWEsR0FEZCxDQUVDQyxTQUFTLENBQVRBLENBQVMsQ0FBRyxLQUZiLENBR0NDLHVCQUF1QixDQUF2QkEsQ0FBdUIsR0FIeEIsQ0FJQ0MsZUFBZSxDQUFmQSxDQUFlLENBQUcsQ0FDZEMsQ0FBQyxDQUFFLE1BRFcsQ0FKbkIsRUFPQyxFQVBGLEVBT1FMLENBQU8sQ0FBQ00sT0FQdEIsQ0FRSUMsQ0FBVyxDQUFHLGtDQUFhLENBQ3ZCTixhQUFhLENBQWJBLENBRHVCLENBRXZCQyxTQUFTLENBQVRBLENBRnVCLENBR3ZCQyx1QkFBdUIsQ0FBdkJBLENBSHVCLENBSXZCQyxlQUFlLENBQWZBLENBSnVCLENBQWIsQ0FSbEIsQ0FlQSxNQUFPLENBQ0hJLGdCQUFnQixDQUFFQyxDQUFGLENBQVEsQ0FDcEJBLENBQUksQ0FBQ0MsVUFBTCxDQUFnQkMsTUFBaEIsQ0FBdUIsQ0FBQ0MsQ0FBRCxDQUF1QkMsQ0FBdkIsR0FBb0MsQ0FDdkQsS0FBTUMsQ0FBQUEsQ0FBWSxDQUFHLDhCQUFpQkQsQ0FBakIsQ0FBckIsQ0FEdUQsTUFHbERDLENBQUFBLENBSGtELEVBT25ERixDQUFvQixFQUFzRCxDQUFsRCxDQUFBTCxDQUFXLENBQUNLLENBQUQsQ0FBdUJFLENBQXZCLENBUGdCLEVBUW5EZCxDQUFPLENBQUNlLE1BQVIsQ0FBZSxDQUNYQyxJQUFJLENBQUUsQ0FDRkosb0JBQW9CLENBQXBCQSxDQURFLENBRUZFLFlBQVksQ0FBWkEsQ0FGRSxDQURLLENBS1hHLE9BQU8sQ0FBRSxzR0FMRSxDQU1YUixJQUFJLENBQUVJLENBQVEsQ0FBQ0ssR0FOSixDQUFmLENBUm1ELENBa0JoREosQ0FsQmdELEVBSTVDRixDQWVkLENBbkJELENBbUJHLElBbkJILENBb0JILENBdEJFLENBd0JWLENBekNVLENBMENYTyxJQUFJLENBQUUsQ0FDRkMsSUFBSSxDQUFFLENBQ0ZDLFFBQVEsQ0FBRSxrQkFEUixDQUVGQyxXQUFXLENBQUUsa0NBRlgsQ0FHRkMsV0FBVyxHQUhULENBREosQ0FNRkMsT0FBTyxDQUFFLElBTlAsQ0FPRkMsTUFBTSxDQUFFLENBQUMsQ0FDTEMsb0JBQW9CLEdBRGYsQ0FFTGhCLFVBQVUsQ0FBRSxDQUNSVCxhQUFhLENBQUUsQ0FDWDBCLElBQUksQ0FBRSxTQURLLENBRFAsQ0FJUnpCLFNBQVMsQ0FBRSxDQUNQMEIsSUFBSSxDQUFFLENBQ0YsS0FERSxDQUVGLE1BRkUsQ0FEQyxDQUtQRCxJQUFJLENBQUUsUUFMQyxDQUpILENBV1J4Qix1QkFBdUIsQ0FBRSxDQUNyQndCLElBQUksQ0FBRSxTQURlLENBWGpCLENBY1J2QixlQUFlLENBQUUsQ0FDYnVCLElBQUksQ0FBRSxRQURPLENBZFQsQ0FGUCxDQW9CTEEsSUFBSSxDQUFFLFFBcEJELENBQUQsQ0FQTixDQTFDSyxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9nZXRQcm9wZXJ0eU5hbWUgZnJvbSAnLi9nZXQtcHJvcGVydHktbmFtZS5qcyc7XG5pbXBvcnQgX25hdHVyYWxTb3J0IGZyb20gJ2lzb3Ryb3BpYy1uYXR1cmFsLXNvcnQnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgY3JlYXRlOiBjb250ZXh0ID0+IHtcbiAgICAgICAgY29uc3QgW3tcbiAgICAgICAgICAgICAgICBjYXNlU2Vuc2l0aXZlID0gZmFsc2UsXG4gICAgICAgICAgICAgICAgZGlyZWN0aW9uID0gJ2FzYycsXG4gICAgICAgICAgICAgICAgaWdub3JlU3BlY2lhbENoYXJhY3RlcnMgPSB0cnVlLFxuICAgICAgICAgICAgICAgIHByZWZpeFBvc2l0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgXzogJ2xhc3QnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSA9IHt9XSA9IGNvbnRleHQub3B0aW9ucyxcbiAgICAgICAgICAgIG5hdHVyYWxTb3J0ID0gX25hdHVyYWxTb3J0KHtcbiAgICAgICAgICAgICAgICBjYXNlU2Vuc2l0aXZlLFxuICAgICAgICAgICAgICAgIGRpcmVjdGlvbixcbiAgICAgICAgICAgICAgICBpZ25vcmVTcGVjaWFsQ2hhcmFjdGVycyxcbiAgICAgICAgICAgICAgICBwcmVmaXhQb3NpdGlvbnNcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBPYmplY3RFeHByZXNzaW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgbm9kZS5wcm9wZXJ0aWVzLnJlZHVjZSgocHJldmlvdXNQcm9wZXJ0eU5hbWUsIHByb3BlcnR5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHByb3BlcnR5TmFtZSA9IF9nZXRQcm9wZXJ0eU5hbWUocHJvcGVydHkpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghcHJvcGVydHlOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldmlvdXNQcm9wZXJ0eU5hbWU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAocHJldmlvdXNQcm9wZXJ0eU5hbWUgJiYgbmF0dXJhbFNvcnQocHJldmlvdXNQcm9wZXJ0eU5hbWUsIHByb3BlcnR5TmFtZSkgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0LnJlcG9ydCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91c1Byb3BlcnR5TmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydHlOYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRXhwZWN0ZWQgb2JqZWN0IGtleXMgdG8gYmUgaW4gb3JkZXIuIFxcJ3t7cHJvcGVydHlOYW1lfX1cXCcgc2hvdWxkIGJlIGJlZm9yZSBcXCd7e3ByZXZpb3VzUHJvcGVydHlOYW1lfX1cXCcuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlOiBwcm9wZXJ0eS5rZXlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5TmFtZTtcbiAgICAgICAgICAgICAgICB9LCBudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGE6IHtcbiAgICAgICAgZG9jczoge1xuICAgICAgICAgICAgY2F0ZWdvcnk6ICdTdHlsaXN0aWMgSXNzdWVzJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAncmVxdWlyZSBvYmplY3Qga2V5cyB0byBiZSBzb3J0ZWQnLFxuICAgICAgICAgICAgcmVjb21tZW5kZWQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgZml4YWJsZTogbnVsbCxcbiAgICAgICAgc2NoZW1hOiBbe1xuICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6IGZhbHNlLFxuICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgIGNhc2VTZW5zaXRpdmU6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Jvb2xlYW4nXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkaXJlY3Rpb246IHtcbiAgICAgICAgICAgICAgICAgICAgZW51bTogW1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2FzYycsXG4gICAgICAgICAgICAgICAgICAgICAgICAnZGVzYydcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N0cmluZydcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGlnbm9yZVNwZWNpYWxDaGFyYWN0ZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdib29sZWFuJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcHJlZml4UG9zaXRpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdvYmplY3QnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHR5cGU6ICdvYmplY3QnXG4gICAgICAgIH1dXG4gICAgfVxufTtcbiJdfQ==
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _default={create:a=>{const[{prefix:b="_"}={}]=a.options,c=d=>{for(const c of d.variables){const e=c.name.startsWith(b);switch(d.type){case"global":case"module":e||c.identifiers.forEach(d=>{a.report({data:{prefix:b,variableName:c.name},message:"Expected top scope variable `{{variableName}}` to have prefix `{{prefix}}`.",node:d})});break;default:e&&c.identifiers.forEach(d=>{a.report({data:{prefix:b,variableName:c.name},message:"Unexpected prefix `{{prefix}}` on child scope variable `{{variableName}}`.",node:d})});}}for(const a of d.childScopes)c(a)};return{"Program:exit"(){c(a.getScope())}}},meta:{docs:{category:"Stylistic Issues",description:"require prefixed variables in top scope",recommended:!0},fixable:null,schema:[{additionalProperties:!1,properties:{prefix:{type:"string"}},type:"object"}]}};exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2pzL3RvcC1zY29wZS1wcmVmaXguanMiXSwibmFtZXMiOlsiY3JlYXRlIiwiY29udGV4dCIsInByZWZpeCIsIm9wdGlvbnMiLCJjaGVja1Njb3BlIiwic2NvcGUiLCJ2YXJpYWJsZSIsInZhcmlhYmxlcyIsImhhc1ByZWZpeCIsIm5hbWUiLCJzdGFydHNXaXRoIiwidHlwZSIsImlkZW50aWZpZXJzIiwiZm9yRWFjaCIsImlkZW50aWZpZXIiLCJyZXBvcnQiLCJkYXRhIiwidmFyaWFibGVOYW1lIiwibWVzc2FnZSIsIm5vZGUiLCJjaGlsZFNjb3BlIiwiY2hpbGRTY29wZXMiLCJnZXRTY29wZSIsIm1ldGEiLCJkb2NzIiwiY2F0ZWdvcnkiLCJkZXNjcmlwdGlvbiIsInJlY29tbWVuZGVkIiwiZml4YWJsZSIsInNjaGVtYSIsImFkZGl0aW9uYWxQcm9wZXJ0aWVzIiwicHJvcGVydGllcyJdLCJtYXBwaW5ncyI6IndHQUFlLENBQ1hBLE1BQU0sQ0FBRUMsQ0FBTyxFQUFJLENBQ2YsS0FBTSxDQUFDLENBQ0NDLE1BQU0sQ0FBTkEsQ0FBTSxDQUFHLEdBRFYsRUFFQyxFQUZGLEVBRVFELENBQU8sQ0FBQ0UsT0FGdEIsQ0FHSUMsQ0FBVSxDQUFHQyxDQUFLLEVBQUksQ0FDbEIsSUFBSyxLQUFNQyxDQUFBQSxDQUFYLEdBQXVCRCxDQUFBQSxDQUFLLENBQUNFLFNBQTdCLENBQXdDLENBQ3BDLEtBQU1DLENBQUFBLENBQVMsQ0FBR0YsQ0FBUSxDQUFDRyxJQUFULENBQWNDLFVBQWQsQ0FBeUJSLENBQXpCLENBQWxCLENBRUEsT0FBUUcsQ0FBSyxDQUFDTSxJQUFkLEVBQ0ksSUFBSyxRQUFMLENBQ0EsSUFBSyxRQUFMLENBQ1NILENBRFQsRUFFUUYsQ0FBUSxDQUFDTSxXQUFULENBQXFCQyxPQUFyQixDQUE2QkMsQ0FBVSxFQUFJLENBQ3ZDYixDQUFPLENBQUNjLE1BQVIsQ0FBZSxDQUNYQyxJQUFJLENBQUUsQ0FDRmQsTUFBTSxDQUFOQSxDQURFLENBRUZlLFlBQVksQ0FBRVgsQ0FBUSxDQUFDRyxJQUZyQixDQURLLENBS1hTLE9BQU8sQ0FBRSw2RUFMRSxDQU1YQyxJQUFJLENBQUVMLENBTkssQ0FBZixDQVFILENBVEQsQ0FGUixDQWNJLE1BQ0osUUFDUU4sQ0FEUixFQUVRRixDQUFRLENBQUNNLFdBQVQsQ0FBcUJDLE9BQXJCLENBQTZCQyxDQUFVLEVBQUksQ0FDdkNiLENBQU8sQ0FBQ2MsTUFBUixDQUFlLENBQ1hDLElBQUksQ0FBRSxDQUNGZCxNQUFNLENBQU5BLENBREUsQ0FFRmUsWUFBWSxDQUFFWCxDQUFRLENBQUNHLElBRnJCLENBREssQ0FLWFMsT0FBTyxDQUFFLDRFQUxFLENBTVhDLElBQUksQ0FBRUwsQ0FOSyxDQUFmLENBUUgsQ0FURCxDQUZSLENBakJKLENBaUNILENBRUQsSUFBSyxLQUFNTSxDQUFBQSxDQUFYLEdBQXlCZixDQUFBQSxDQUFLLENBQUNnQixXQUEvQixDQUNJakIsQ0FBVSxDQUFDZ0IsQ0FBRCxDQUVqQixDQTdDTCxDQStDQSxNQUFPLENBQ0gsZ0JBQWtCLENBQ2RoQixDQUFVLENBQUNILENBQU8sQ0FBQ3FCLFFBQVIsRUFBRCxDQUNiLENBSEUsQ0FLVixDQXREVSxDQXVEWEMsSUFBSSxDQUFFLENBQ0ZDLElBQUksQ0FBRSxDQUNGQyxRQUFRLENBQUUsa0JBRFIsQ0FFRkMsV0FBVyxDQUFFLHlDQUZYLENBR0ZDLFdBQVcsR0FIVCxDQURKLENBTUZDLE9BQU8sQ0FBRSxJQU5QLENBT0ZDLE1BQU0sQ0FBRSxDQUFDLENBQ0xDLG9CQUFvQixHQURmLENBRUxDLFVBQVUsQ0FBRSxDQUNSN0IsTUFBTSxDQUFFLENBQ0pTLElBQUksQ0FBRSxRQURGLENBREEsQ0FGUCxDQU9MQSxJQUFJLENBQUUsUUFQRCxDQUFELENBUE4sQ0F2REssQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgICBjcmVhdGU6IGNvbnRleHQgPT4ge1xuICAgICAgICBjb25zdCBbe1xuICAgICAgICAgICAgICAgIHByZWZpeCA9ICdfJ1xuICAgICAgICAgICAgfSA9IHt9XSA9IGNvbnRleHQub3B0aW9ucyxcbiAgICAgICAgICAgIGNoZWNrU2NvcGUgPSBzY29wZSA9PiB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCB2YXJpYWJsZSBvZiBzY29wZS52YXJpYWJsZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzUHJlZml4ID0gdmFyaWFibGUubmFtZS5zdGFydHNXaXRoKHByZWZpeCk7XG5cbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChzY29wZS50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdnbG9iYWwnOlxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbW9kdWxlJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWhhc1ByZWZpeCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZS5pZGVudGlmaWVycy5mb3JFYWNoKGlkZW50aWZpZXIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5yZXBvcnQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlZml4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZU5hbWU6IHZhcmlhYmxlLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFeHBlY3RlZCB0b3Agc2NvcGUgdmFyaWFibGUgYHt7dmFyaWFibGVOYW1lfX1gIHRvIGhhdmUgcHJlZml4IGB7e3ByZWZpeH19YC4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGU6IGlkZW50aWZpZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhhc1ByZWZpeCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZS5pZGVudGlmaWVycy5mb3JFYWNoKGlkZW50aWZpZXIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5yZXBvcnQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlZml4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZU5hbWU6IHZhcmlhYmxlLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdVbmV4cGVjdGVkIHByZWZpeCBge3twcmVmaXh9fWAgb24gY2hpbGQgc2NvcGUgdmFyaWFibGUgYHt7dmFyaWFibGVOYW1lfX1gLicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZTogaWRlbnRpZmllclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjaGlsZFNjb3BlIG9mIHNjb3BlLmNoaWxkU2NvcGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoZWNrU2NvcGUoY2hpbGRTY29wZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgJ1Byb2dyYW06ZXhpdCcgKCkge1xuICAgICAgICAgICAgICAgIGNoZWNrU2NvcGUoY29udGV4dC5nZXRTY29wZSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIG1ldGE6IHtcbiAgICAgICAgZG9jczoge1xuICAgICAgICAgICAgY2F0ZWdvcnk6ICdTdHlsaXN0aWMgSXNzdWVzJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAncmVxdWlyZSBwcmVmaXhlZCB2YXJpYWJsZXMgaW4gdG9wIHNjb3BlJyxcbiAgICAgICAgICAgIHJlY29tbWVuZGVkOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGZpeGFibGU6IG51bGwsXG4gICAgICAgIHNjaGVtYTogW3tcbiAgICAgICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBmYWxzZSxcbiAgICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICBwcmVmaXg6IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N0cmluZydcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdHlwZTogJ29iamVjdCdcbiAgICAgICAgfV1cbiAgICB9XG59O1xuIl19